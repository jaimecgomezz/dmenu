#!/usr/bin/env sh

##############################
# @jaimecgomezz
# 
# This script handles all the
# patching related to this
# dmenu distribution
##############################

should_build=0
handler="patch -p1"
applied_file="applied"

patch_applied() {
  echo "[!] ( $1 ) has already been applied, remove the patch name from the file '$applied_file' if mistaken" ;
  exit 1
}
patch_unapplied() {
  echo "[!] ( $1 ) hasn't been applied yet, add the patch to the file '$applied_file' if mistaken" ;
  exit 1
}
contains() {
  str="$1"
  substr="$2"
  if test "${str#*$substr}" != "$str"; then return 0; fi
  return 1
}
check_applied() {
  if cat $applied_file | grep -q "$1"; then
    echo 1
  else
    echo 0
  fi
}
check_dependency() {
  if ! ( command -v "$1" ) > /dev/null ;then
    missing_dependency "$1"
    exit 1
  fi
}
print_usage() { cat handle-usage ; exit 1 ; }
pdr() { echo "===================================" ; }
missing_dependency() { echo "[!] ( $1 ) missing, please install" ; }

check_dependency "patch"

# Handle uncompatible syntax
[ "$#" -lt 2 ] && print_usage

# Define arguments
action="$1"; patch="$2"

# Test action
case "$action" in
  diff)
    shift
  ;;
  patch)
    should_build=1
    shift
  ;;
  stash)
    options="-R"
    shift
  ;;
  depatch)
    options="-R"
    should_build=1
    shift
  ;;
  *)
    print_usage
  ;;
esac

# Test patch
case "$patch" in
  border\
    |case-insensitive\
    |dynamic-options\
    |fuzzymatch\
    |fuzzyhighlight\
    |grid\
    |xyw\
    |numbers\
    |password\
    |incremental\
    |preselect\
    |scroll\
    |center)
    shift
  ;;
  * )
    print_usage 
  ;;
esac

# Check if patch is applied
applied="$( check_applied "$patch" )"

[ "$applied" = "1" ] \
  && contains " diff patch " " $action " \
    && patch_applied "$patch" \

[ "$applied" = "0" ] \
  && contains " stash depatch " " $action " \
    && patch_unapplied "$patch" \

contains "$@" "-q" && handle_std="> /dev/null 2>&1"

set -e

pdr; echo "${action}ing ${patch}..."; pdr
eval "( $handler $options < patches/${patch}.patch ) $handle_std"

[ "$should_build" -eq 1 ] \
  && pdr; echo "building dmenu..."; pdr \
  && eval "sudo make install clean $handle_std" \
  && pdr; echo "${action}ing $patch done!"; pdr

contains " diff patch " " $action " && echo "$patch" >> "$applied_file"
contains " stash depatch " " $action " && sed -i "/^${patch}$/d" "$applied_file"

