diff --git a/dmenu.c b/dmenu.c
index 0f9d9dd..d3cf045 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -693,7 +693,118 @@ draw:
 }
 
 // >>>>>>>>>>>>>>>>>>>> mouse-support
-// ==================== mouse-support
+static void
+buttonpress(XEvent *e)
+{
+  struct item *item;
+  XButtonPressedEvent *ev = &e->xbutton;
+  int x = 0, y = 0, h = bh, w;
+
+  if (ev->window != win)
+    return;
+
+  /* right-click: exit */
+  if (ev->button == Button3)
+    exit(1);
+
+  if (prompt && *prompt)
+    x += promptw;
+
+  /* input field */
+  w = (lines > 0 || !matches) ? mw - x : inputw;
+
+  /* left-click on input: clear input,
+   * NOTE: if there is no left-arrow the space for < is reserved so
+   *       add that to the input width */
+  if (ev->button == Button1 &&
+     ((lines <= 0 && ev->x >= 0 && ev->x <= x + w +
+     ((!prev || !curr->left) ? TEXTW("<") : 0)) ||
+     (lines > 0 && ev->y >= y && ev->y <= y + h))) {
+    insert(NULL, -cursor);
+    drawmenu();
+    return;
+  }
+  /* middle-mouse click: paste selection */
+  if (ev->button == Button2) {
+    XConvertSelection(dpy, (ev->state & ShiftMask) ? clip : XA_PRIMARY,
+                      utf8, utf8, win, CurrentTime);
+    drawmenu();
+    return;
+  }
+  /* scroll up */
+  if (ev->button == Button4 && prev) {
+    sel = curr = prev;
+    calcoffsets();
+    drawmenu();
+    return;
+  }
+  /* scroll down */
+  if (ev->button == Button5 && next) {
+    sel = curr = next;
+    calcoffsets();
+    drawmenu();
+    return;
+  }
+  if (ev->button != Button1)
+    return;
+  if (ev->state & ~ControlMask)
+    return;
+  if (lines > 0) {
+    /* vertical list: (ctrl)left-click on item */
+    w = mw - x;
+    for (item = curr; item != next; item = item->right) {
+      y += h;
+      if (ev->y >= y && ev->y <= (y + h)) {
+        puts(item->text);
+        if (!(ev->state & ControlMask))
+          exit(0);
+        sel = item;
+        if (sel) {
+          sel->out = 1;
+          drawmenu();
+        }
+        return;
+      }
+    }
+  } else if (matches) {
+    /* left-click on left arrow */
+    x += inputw;
+    w = TEXTW("<");
+    if (prev && curr->left) {
+      if (ev->x >= x && ev->x <= x + w) {
+        sel = curr = prev;
+        calcoffsets();
+        drawmenu();
+        return;
+      }
+    }
+    /* horizontal list: (ctrl)left-click on item */
+    for (item = curr; item != next; item = item->right) {
+      x += w;
+      w = MIN(TEXTW(item->text), mw - x - TEXTW(">"));
+      if (ev->x >= x && ev->x <= x + w) {
+        puts(item->text);
+        if (!(ev->state & ControlMask))
+          exit(0);
+        sel = item;
+        if (sel) {
+          sel->out = 1;
+          drawmenu();
+        }
+        return;
+      }
+    }
+    /* left-click on right arrow */
+    w = TEXTW(">");
+    x = mw - w;
+    if (next && ev->x >= x && ev->x <= x + w) {
+      sel = curr = next;
+      calcoffsets();
+      drawmenu();
+      return;
+    }
+  }
+}
 // <<<<<<<<<<<<<<<<<<<< mouse-support
 
 static void
@@ -794,7 +905,9 @@ run(void)
 			continue;
 		switch(ev.type) {
     // >>>>>>>>>>>>>>>>>>>> mouse-support
-    // ==================== mouse-support
+    case ButtonPress:
+      buttonpress(&ev);
+      break;
     // <<<<<<<<<<<<<<<<<<<< mouse-support
 		case DestroyNotify:
 			if (ev.xdestroywindow.window != win)
@@ -917,8 +1030,8 @@ setup(void)
   // <<<<<<<<<<<<<<<<<<<< managed
 	swa.background_pixel = scheme[SchemeNorm][ColBg].pixel;
   // >>>>>>>>>>>>>>>>>>>> mouse-support
-  // ==================== mouse-support
-  swa.event_mask = ExposureMask | KeyPressMask | VisibilityChangeMask;
+  swa.event_mask = ExposureMask | KeyPressMask | VisibilityChangeMask |
+                   ButtonPressMask;
   // <<<<<<<<<<<<<<<<<<<< mouse-support
 
 	win = XCreateWindow(
