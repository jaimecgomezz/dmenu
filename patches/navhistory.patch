diff --git a/config.def.h b/config.def.h
index 4dc74ce..02e1b24 100644
--- a/config.def.h
+++ b/config.def.h
@@ -70,5 +70,6 @@ static const char worddelimiters[] = " ";
 // <<<<<<<<<<<<<<<<<<<< symbols
 
 // >>>>>>>>>>>>>>>>>>>> navhistory
-// ==================== navhistory
+static unsigned int maxhist    = 64;
+static int histnodup           = 1;	/* if 0, record repeated histories */
 // <<<<<<<<<<<<<<<<<<<< navhistory
diff --git a/dmenu.1 b/dmenu.1
index 9a77a50..df08054 100644
--- a/dmenu.1
+++ b/dmenu.1
@@ -66,7 +66,8 @@ dmenu \- dynamic menu
 \" ==================== json
 \" <<<<<<<<<<<<<<<<<<<< json
 \" >>>>>>>>>>>>>>>>>>>> navhistory
-\" ==================== navhistory
+.RB [ \-H
+.IR histfile ]
 \" <<<<<<<<<<<<<<<<<<<< navhistory
 .RB [ \-nb
 .IR color ]
@@ -171,7 +172,9 @@ defines the prompt to be displayed to the left of the input field.
 \" ==================== json
 \" <<<<<<<<<<<<<<<<<<<< json
 \" >>>>>>>>>>>>>>>>>>>> navhistory
-\" ==================== navhistory
+.TP
+.BI \-H " histfile"
+save input in histfile and use it for history navigation.
 \" <<<<<<<<<<<<<<<<<<<< navhistory
 .BI \-nb " color"
 defines the normal background color.
diff --git a/dmenu.c b/dmenu.c
index b5ad275..212cdc5 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -95,7 +95,10 @@ static int mon = -1, screen;
 // ==================== reject-no-match
 // <<<<<<<<<<<<<<<<<<<< reject-no-match
 // >>>>>>>>>>>>>>>>>>>> navhistory
-// ==================== navhistory
+static struct item *backup_items;
+static char *histfile;
+static char **history;
+static size_t histsz, histpos;
 // <<<<<<<<<<<<<<<<<<<< navhistory
 
 static Atom clip, utf8;
@@ -488,7 +491,128 @@ movewordedge(int dir)
 }
 
 // >>>>>>>>>>>>>>>>>>>> navhistory
-// ==================== navhistory
+static void
+loadhistory(void)
+{
+  FILE *fp = NULL;
+  static size_t cap = 0;
+  size_t llen;
+  char *line;
+
+  if (!histfile) {
+    return;
+  }
+
+  fp = fopen(histfile, "r");
+  if (!fp) {
+    return;
+  }
+
+  for (;;) {
+    line = NULL;
+    llen = 0;
+    if (-1 == getline(&line, &llen, fp)) {
+      if (ferror(fp)) {
+        die("failed to read history");
+      }
+      free(line);
+      break;
+    }
+
+    if (cap == histsz) {
+      cap += 64 * sizeof(char*);
+      history = realloc(history, cap);
+      if (!history) {
+        die("failed to realloc memory");
+      }
+    }
+    strtok(line, "\n");
+    history[histsz] = line;
+    histsz++;
+  }
+  histpos = histsz;
+
+  if (fclose(fp)) {
+    die("failed to close file %s", histfile);
+  }
+}
+
+static void
+navhistory(int dir)
+{
+  static char def[BUFSIZ];
+  char *p = NULL;
+  size_t len = 0;
+
+  if (!history || histpos + 1 == 0)
+    return;
+
+  if (histsz == histpos) {
+    strncpy(def, text, sizeof(def));
+  }
+
+  switch(dir) {
+  case 1:
+    if (histpos < histsz - 1) {
+      p = history[++histpos];
+    } else if (histpos == histsz - 1) {
+      p = def;
+      histpos++;
+    }
+    break;
+  case -1:
+    if (histpos > 0) {
+      p = history[--histpos];
+    }
+    break;
+  }
+  if (p == NULL) {
+    return;
+  }
+
+  len = MIN(strlen(p), BUFSIZ - 1);
+  strncpy(text, p, len);
+  text[len] = '\0';
+  cursor = len;
+  match();
+}
+
+static void
+savehistory(char *input)
+{
+  unsigned int i;
+  FILE *fp;
+
+  if (!histfile ||
+      0 == maxhist ||
+      0 == strlen(input)) {
+    goto out;
+  }
+
+  fp = fopen(histfile, "w");
+  if (!fp) {
+    die("failed to open %s", histfile);
+  }
+  for (i = histsz < maxhist ? 0 : histsz - maxhist; i < histsz; i++) {
+    if (0 >= fprintf(fp, "%s\n", history[i])) {
+      die("failed to write to %s", histfile);
+    }
+  }
+  if (!histnodup || (histsz > 0 && strcmp(input, history[histsz-1]) != 0)) { /* TODO */
+    if (0 >= fputs(input, fp)) {
+      die("failed to write to %s", histfile);
+    }
+  }
+  if (fclose(fp)) {
+    die("failed to close file %s", histfile);
+  }
+
+out:
+  for (i = 0; i < histsz; i++) {
+    free(history[i]);
+  }
+  free(history);
+}
 // <<<<<<<<<<<<<<<<<<<< navhistory
 
 static void
@@ -502,7 +626,7 @@ keypress(XKeyEvent *ev)
   // ==================== prefix-completition
   // <<<<<<<<<<<<<<<<<<<< prefix-completition
   // >>>>>>>>>>>>>>>>>>>> navhistory
-  // ==================== navhistory
+  int i;
   // <<<<<<<<<<<<<<<<<<<< navhistory
 
 	len = XmbLookupString(xic, ev, buf, sizeof buf, &ksym, &status);
@@ -553,7 +677,26 @@ keypress(XKeyEvent *ev)
 			                  utf8, utf8, win, CurrentTime);
 			return;
     // >>>>>>>>>>>>>>>>>>>> navhistory
-    // ==================== navhistory
+    case XK_r:
+      if (histfile) {
+        if (!backup_items) {
+          backup_items = items;
+          items = calloc(histsz + 1, sizeof(struct item));
+          if (!items) {
+            die("cannot allocate memory");
+          }
+
+          for (i = 0; i < histsz; i++) {
+            items[i].text = history[i];
+          }
+        } else {
+          free(items);
+          items = backup_items;
+          backup_items = NULL;
+        }
+      }
+      match();
+      goto draw;
     // <<<<<<<<<<<<<<<<<<<< navhistory
 		case XK_Left:
 			movewordedge(-1);
@@ -588,7 +731,14 @@ keypress(XKeyEvent *ev)
 		case XK_k: ksym = XK_Prior; break;
 		case XK_l: ksym = XK_Down;  break;
     // >>>>>>>>>>>>>>>>>>>> navhistory
-    // ==================== navhistory
+    case XK_p:
+      navhistory(-1);
+      buf[0]=0;
+      break;
+    case XK_n:
+      navhistory(1);
+      buf[0]=0;
+			break;
     // <<<<<<<<<<<<<<<<<<<< navhistory
 		default:
 			return;
@@ -675,7 +825,8 @@ insert:
       // ==================== multi-selection
       // <<<<<<<<<<<<<<<<<<<< multi-selection
       // >>>>>>>>>>>>>>>>>>>> navhistory
-      // ==================== navhistory
+      savehistory((sel && !(ev->state & ShiftMask))
+            ? sel->text : text);
       // <<<<<<<<<<<<<<<<<<<< navhistory
 			cleanup();
 			exit(0);
@@ -1064,7 +1215,7 @@ usage(void)
     // ==================== json
     // <<<<<<<<<<<<<<<<<<<< json
     // >>>>>>>>>>>>>>>>>>>> navhistory
-    // ==================== navhistory
+    "[-H histfile]"
     // <<<<<<<<<<<<<<<<<<<< navhistory
     "\n\t\t"
     "[-nb color]"
@@ -1174,7 +1325,8 @@ main(int argc, char *argv[])
     // ==================== json
     // <<<<<<<<<<<<<<<<<<<< json
     // >>>>>>>>>>>>>>>>>>>> navhistory
-    // ==================== navhistory
+		else if (!strcmp(argv[i], "-H"))
+			histfile = argv[++i];
     // <<<<<<<<<<<<<<<<<<<< navhistory
 		else
 			usage();
@@ -1201,7 +1353,7 @@ main(int argc, char *argv[])
 #endif
 
   // >>>>>>>>>>>>>>>>>>>> navhistory
-  // ==================== navhistory
+  loadhistory();
   // <<<<<<<<<<<<<<<<<<<< navhistory
 
 	if (fast && !isatty(0)) {
diff --git a/dmenu_run b/dmenu_run
index 3908bf9..f61451c 100755
--- a/dmenu_run
+++ b/dmenu_run
@@ -1,5 +1,4 @@
 #!/bin/sh
 # >>>>>>>>>>>>>>>>>>>> navhistory
-# ==================== navhistory
-dmenu_path | dmenu "$@" | ${SHELL:-"/bin/sh"} &
+dmenu_path | dmenu -H "${XDG_CACHE_HOME:-$HOME/.cache/}/dmenu_run.hist" "$@" | ${SHELL:-"/bin/sh"} &
 # <<<<<<<<<<<<<<<<<<<< navhistory
