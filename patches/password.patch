diff --git a/dmenu.1 b/dmenu.1
index 1a43dcd..f5f1a24 100644
--- a/dmenu.1
+++ b/dmenu.1
@@ -20,7 +20,7 @@ dmenu \- dynamic menu
 \" ==================== xyw
 \" <<<<<<<<<<<<<<<<<<<< xyw
 \" >>>>>>>>>>>>>>>>>>>> password
-\" ==================== password
+.RB [ \-P ]
 \" <<<<<<<<<<<<<<<<<<<< password
 .RB [ \-m
 .IR monitor ]
@@ -93,7 +93,9 @@ prints version information to stdout, then exits.
 \" ==================== xyw
 \" <<<<<<<<<<<<<<<<<<<< xyw
 \" >>>>>>>>>>>>>>>>>>>> password
-\" ==================== password
+.B \-P
+dmenu will not directly display the keyboard input, but instead replace it with dots. All data from stdin will be ignored.
+.TP
 \" <<<<<<<<<<<<<<<<<<<< password
 .BI \-m " monitor"
 dmenu is displayed on the monitor number supplied. Monitor numbers are starting
diff --git a/dmenu.c b/dmenu.c
index c558b51..f5be687 100644
--- a/dmenu.c
+++ b/dmenu.c
@@ -55,8 +55,7 @@ static char text[BUFSIZ] = "";
 static char *embed;
 static int bh, mw, mh;
 // >>>>>>>>>>>>>>>>>>>> password
-// ==================== password
-static int inputw = 0, promptw;
+static int inputw = 0, promptw, passwd = 0;
 // <<<<<<<<<<<<<<<<<<<< password
 static int lrpad; /* sum of left and right padding */
 static size_t cursor;
@@ -183,7 +182,7 @@ drawmenu(void)
 	struct item *item;
 	int x = 0, y = 0, w;
   // >>>>>>>>>>>>>>>>>>>> password
-  // ==================== password
+  char *censort;
   // <<<<<<<<<<<<<<<<<<<< password
 
 	drw_setscheme(drw, scheme[SchemeNorm]);
@@ -197,8 +196,12 @@ drawmenu(void)
 	w = (lines > 0 || !matches) ? mw - x : inputw;
 	drw_setscheme(drw, scheme[SchemeNorm]);
   // >>>>>>>>>>>>>>>>>>>> password
-  // ==================== password
-  drw_text(drw, x, 0, w, bh, lrpad / 2, text, 0);
+  if (passwd) {
+    censort = ecalloc(1, sizeof(text));
+    memset(censort, '.', strlen(text));
+    drw_text(drw, x, 0, w, bh, lrpad / 2, censort, 0);
+    free(censort);
+  } else drw_text(drw, x, 0, w, bh, lrpad / 2, text, 0);
   // <<<<<<<<<<<<<<<<<<<< password
 
 	curpos = TEXTW(text) - TEXTW(&text[cursor]);
@@ -619,7 +622,10 @@ readstdin(void)
 	unsigned int tmpmax = 0;
 
   // >>>>>>>>>>>>>>>>>>>> password
-  // ==================== password
+  if (passwd) {
+    inputw = lines = 0;
+    return;
+  }
   // <<<<<<<<<<<<<<<<<<<< password
 
 	/* read each line from stdin and add it to the item list */
@@ -840,7 +846,7 @@ usage(void)
     // ==================== fuzzymatch
     // <<<<<<<<<<<<<<<<<<<< fuzzymatch
     // >>>>>>>>>>>>>>>>>>>> password
-    // ==================== password
+    "[-P]"
     // <<<<<<<<<<<<<<<<<<<< password
     "\n\t\t"
     "[-m monitor]"
@@ -900,7 +906,8 @@ main(int argc, char *argv[])
     // ==================== fuzzymatch
     // <<<<<<<<<<<<<<<<<<<< fuzzymatch
     // >>>>>>>>>>>>>>>>>>>> password
-    // ==================== password
+    else if (!strcmp(argv[i], "-P"))   /* is the input a password */
+      passwd = 1;
     // <<<<<<<<<<<<<<<<<<<< password
 		else if (!strcmp(argv[i], "-i")) { /* case-insensitive item matching */
 			fstrncmp = strncasecmp;
